#!/usr/bin/env python

from server.profserver import ProfServer
from multiprocessing import Process
from subprocess import call
import socket
import time
import os, sys
import subprocess
import redis
import signal
import argparse
import json
import logging

parser = argparse.ArgumentParser(description='Profiling server')
parser.add_argument('--bind', help='Server IP address binder, default is localhost')
parser.add_argument('--port', help='Server port number, default is 10000') 
args = parser.parse_args()

def keyboard_int_handler(signal, frame):
    logging.info("[PID %s] Stop profiling server ..." % os.getpid())
    sys.exit(0)

def main():
    portnumber = 10000
    bindaddr = 'localhost'
    
    if args.bind is not None:
        bindaddr = args.bind

    if args.port is not None:
        portnumber = int(args.port)
    
    logging.basicConfig(level=logging.INFO)
    logging.info("Bind addres is %s, port is %s" % (bindaddr, portnumber)) 
    signal.signal(signal.SIGINT, keyboard_int_handler)
    
    profserver = ProfServer(bindaddr, portnumber)
    profserver.run()   

if __name__ == "__main__":
    main()
